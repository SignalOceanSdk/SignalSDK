from signal_ocean.scraped_fixtures import ScrapedFixture
from signal_ocean.util.parsing_helpers import _to_snake_case


def test_fixtures_field_names():
    api_fields = [
        "FixtureID",
        "MessageID",
        "ExternalMessageID",
        "ParsedPartID",
        "LineFrom",
        "LineTo",
        "InLineOrder",
        "Source",
        "UpdatedDate",
        "ReceivedDate",
        "IsDeleted",
        "LowConfidence",
        "ScrapedVesselName",
        "ScrapedDeadweight",
        "ScrapedYearBuilt",
        "IMO",
        "VesselName",
        "Deadweight",
        "YearBuilt",
        "LiquidCapacity",
        "VesselTypeID",
        "VesselType",
        "VesselClassID",
        "VesselClass",
        "CommercialOperatorID",
        "CommercialOperator",
        "ScrapedLaycan",
        "LaycanFrom",
        "LaycanTo",
        "ScrapedLoad",
        "LoadGeoID",
        "LoadName",
        "LoadTaxonomyID",
        "LoadTaxonomy",
        "ScrapedLoad2",
        "LoadGeoID2",
        "LoadName2",
        "LoadTaxonomyID2",
        "LoadTaxonomy2",
        "ScrapedDischarge",
        "ScrapedDischargeOptions",
        "DischargeGeoID",
        "DischargeName",
        "DischargeTaxonomyID",
        "DischargeTaxonomy",
        "ScrapedDischarge2",
        "DischargeGeoID2",
        "DischargeName2",
        "DischargeTaxonomyID2",
        "DischargeTaxonomy2",
        "ScrapedCharterer",
        "ChartererID",
        "Charterer",
        "ScrapedCargoType",
        "CargoTypeID",
        "CargoType",
        "CargoGroupID",
        "CargoGroup",
        "ScrapedQuantity",
        "Quantity",
        "QuantityBuffer",
        "QuantityFrom",
        "QuantityTo",
        "ScrapedRate",
        "ScrapedRateOptions",
        "RateValue",
        "RateType",
        "OpenGeoID",
        "OpenGeoName",
        "OpenTaxonomyID",
        "OpenTaxonomy",
        "OpenDate",
        "ScrapedDeliveryDate",
        "DeliveryDateFrom",
        "DeliveryDateTo",
        "ScrapedDelivery",
        "DeliveryGeoID",
        "DeliveryName",
        "DeliveryTaxonomyID",
        "DeliveryTaxonomy",
        "ScrapedRedeliveryFrom",
        "RedeliveryFromGeoID",
        "RedeliveryFromName",
        "RedeliveryFromTaxonomyID",
        "RedeliveryFromTaxonomy",
        "ScrapedRedeliveryTo",
        "RedeliveryToGeoID",
        "RedeliveryToName",
        "RedeliveryToTaxonomyID",
        "RedeliveryToTaxonomy",
        "CharterTypeID",
        "CharterType",
        "FixtureStatusID",
        "FixtureStatus",
        "IsOwnersOption",
        "IsCOA",
        "Content",
        "Subject",
        "Sender",
        "IsPrivate",
        "IsInvalidated",
        "IsPartial",
    ]
    snake_case_api_fields = list(map(_to_snake_case, api_fields))
    scraped_fixtures_model_fields = list(ScrapedFixture.__dataclass_fields__)
    assert snake_case_api_fields == scraped_fixtures_model_fields
